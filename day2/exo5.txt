1-créer une procédure qui permet d'augmenter le salaire d'un employé en renseignant un pourcentage d'augmentation

PROCEDURE AUGMENTE_SAL (empid employee.employee_id%TYPE, Pourcentage
 NUMBER) IS
BEGIN
 UPDATE employee
 SET salary = salary + salary*pourcentage
 WHERE employee_id=empid
 AND empid NOT NULL;
 IF SQL%NOTFOUNDTHEN
 DBMS_OUTPUT.PUT_LINE (‘MAJ Non Effectuée’);
 ELSE
 DBMS_OUTPUT.PUT_LINE (‘MAJ Réussie’);
END IF
ENDAUGMENTE_SAL;

2-créer une procédure qui permet de modifier le manager d'un département

PROCEDURE manager_update (managerid employee.manager_id%TYPE,
deptid employee.departement_id%TYPE) IS
BEGIN
 UPDATE employee
 SET mangers_id= managerid
 WHERE departement_id= deptid;

 IF SQL%NOTFOUNDTHEN
 DBMS_OUTPUT.PUT_LINE (‘MAJ Non Effectuée’);
 ELSE
 DBMS_OUTPUT.PUT_LINE (‘MAJ Réussie’);
END IF
ENDAUGMENTE_SAL;

3-créer une fonction qui retourne le salaire moyen et médian d'un département
 create  type array_t is varray(2) of number;

CREATE OR REPLACE FUNCTION check_employee_salary_median
(deptid IN NUMBER)
RETURN array_t 
IS
AVG_salary employee.salary%TYPE;
median_salary employee.salary%TYPE;
 v_array  array_t;

BEGIN
SELECT avg(salary), MEDIAN(salary)

INTO AVG_salary ,median_salary

FROM employee

WHERE departement_id= deptid ;

 v_array  :=array_t(0,0);   
  v_array(1):=AVG_salary;
  v_array(2):=median_salary;
  
RETURN v_array;
END;

















