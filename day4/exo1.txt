from pymongo import MongoClient
import urllib.parse
import certifi

username = urllib.parse.quote_plus('bachiretmounir')
password = urllib.parse.quote_plus("")

uri = "mongodb+srv://{}:{}@cluster0.leremoy.mongodb.net/?retryWrites=true&w=majority".format(username, password)
client = MongoClient(uri,tlsCAFile=certifi.where())

db_name = "videodb"
collection_name = "video"

db = client.videodb
coll = db.video

coll.drop()

docs = [
        {"_id": 1, "Titre": "Les misérables", "Réalisatieur": "Tom Hooper", "Temps d'execution": 158},
        {"_id": 2, "Titre": "Skyfall ", "Réalisatieur": "Sam Mendes", "Temps d'execution": 137},
        {"_id": 3, "Titre": "Les grands hommes", "Réalisatieur": " Raoul Walsh", "Temps d'execution": 158}
    ]
          
result = coll.insert_many(docs)

client.close()






Interrogation simple

1-Liste de tous les livres (type « Book ») 

	db.publis.find({"type" : "Book"});

2-Liste des publications depuis 2011 ;

	db.publis.find({year : {$gte : 2011}});

3-Liste des livres depuis 2014 ;
	db.publis.find({"type" : "Book", year : {$gte : 2014}});

4-Liste des publications de l’auteur « Toru Ishida » ;

	db.publis.find({authors : "Toru Ishida"});

5-Liste de tous les éditeurs (type « publisher »), distincts ;

	db.publis.distinct("publisher");

6-Liste de tous les auteurs distincts ;
	
	db.publis.distinct("authors");

7-Trier les publications de « Toru Ishida » par titre de livre et par page de début ;

	db.publis.aggregate([{$match:{authors : "Toru Ishida"}},
		 { $sort : { booktitle : 1, "pages.start" : 1 } }]);

8-Projeter le résultat sur le titre de la publication, et les pages ;

	db.publis.aggregate([{$match:{authors : "Toru Ishida"}},
		 {$sort : { booktitle : 1, "pages.start" : 1 }}, {$project : {title : 1, pages : 1}}]);

9-Compter le nombre de ses publications ;
	
	db.publis.aggregate([{$match:{authors : "Toru Ishida"}},
		 {$group:{_id:null, total : { $sum : 1}}}]);


10-Compter le nombre de publications depuis 2011 et par type ;

	db.publis.aggregate([{$match:{year : {$gte : 2011}}}, 
		{$group:{_id:"$type", total : { $sum : 1}}}]);

11-Compter le nombre de publications par auteur et trier le résultat par ordre croissant ;

	db.publis.aggregate([{ $unwind : "$authors" },
		 { $group : { _id : "$authors", number : { $sum : 1 } }}, {$sort : {number : -1}}] );

